1. Find the albums recorded by the artist Queen.

Artist.where("name = ?", "Queen")
  Artist Load (2.0ms)  SELECT  "artists".* FROM "artists" WHERE (name = 'Queen') LIMIT $1  [["LIMIT", 11]]
 => #<ActiveRecord::Relation [#<Artist id: 51, name: "Queen", created_at: "2006-01-08 22:57:01", updated_at: "2014-01-29 22:10:22">]>

Album.where(artist_id: 51)
  Album Load (0.8ms)  SELECT  "albums".* FROM "albums" WHERE "albums"."artist_id" = $1 LIMIT $2  [["artist_id", 51], ["LIMIT", 11]]
 => #<ActiveRecord::Relation [#<Album id: 36, artist_id: 51, title: "Greatest Hits II", created_at: "2008-01-30 14:00:12", updated_at: "2014-01-29 22:14:02">, #<Album id: 185, artist_id: 51, title: "Greatest Hits I", created_at: "2007-12-29 12:02:13", updated_at: "2014-01-29 22:14:02">, #<Album id: 186, artist_id: 51, title: "News Of The World", created_at: "2010-06-23 20:50:06", updated_at: "2014-01-29 22:14:02">]>

 **---------------**
2. Count how many tracks belong to the media type "Protected MPEG-4 video file".

MediaType.where(name: "Protected MPEG-4 video file").count
   (1.2ms)  SELECT COUNT(*) FROM "media_types" WHERE "media_types"."name" = $1  [["name", "Protected MPEG-4 video file"]]
 => 1

 **---------------**
3. Find the genre with the name "Hip Hop/Rap".

Genre.find_by_name("Hip Hop/Rap")
  Genre Load (2.1ms)  SELECT  "genres".* FROM "genres" WHERE "genres"."name" = $1 LIMIT $2  [["name", "Hip Hop/Rap"], ["LIMIT", 1]]
 => #<Genre id: 17, name: "Hip Hop/Rap", created_at: "2013-01-20 02:04:31", updated_at: "2014-01-29 22:14:08">

 **---------------**
4. Count how many tracks belong to the "Hip Hop/Rap" genre

Track.find_by(genre_id: 17)
  Track Load (2.6ms)  SELECT  "tracks".* FROM "tracks" WHERE "tracks"."genre_id" = $1 LIMIT $2  [["genre_id", 17], ["LIMIT", 1]]
 => #<Track id: 2238, album_id: 184, genre_id: 17, media_type_id: 1, name: "ZeroVinteUm", composer: nil, milliseconds: 315637, bytes: 10426550, unit_price: 0.99e0, created_at: "2008-06-04 09:21:54", updated_at: "2014-01-29 22:15:01">

 **---------------**
5. Find the total amount of time required to listen to all the tracks in the database.

Track.count(:milliseconds)
   (6.4ms)  SELECT COUNT("tracks"."milliseconds") FROM "tracks"
 => 3502

 **---------------**
6. Find the highest price of any track that has the media type "MPEG audio file".

MediaType.find_by_name("MPEG audio file")
  MediaType Load (2.3ms)  SELECT  "media_types".* FROM "media_types" WHERE "media_types"."name" = $1 LIMIT $2  [["name", "MPEG audio file"], ["LIMIT", 1]]
 => #<MediaType id: 1, name: "MPEG audio file", created_at: "2006-11-24 08:21:33", updated_at: "2014-01-29 22:14:22">

Track.where(media_type_id: 1).maximum(:unit_price)
  (2.6ms)  SELECT MAX("tracks"."unit_price") FROM "tracks" WHERE "tracks"."media_type_id" = $1  [["media_type_id", 1]]
=> 0.99e0

**---------------**
7. Find the name of the most expensive track that has the media type "MPEG audio file".

Track.where(media_type_id: 1, unit_price: 0.99e0).select(:name)
  Track Load (3.6ms)  SELECT  "tracks"."name" FROM "tracks" WHERE "tracks"."media_type_id" = $1 AND "tracks"."unit_price" = $2 LIMIT $3  [["media_type_id", 1], ["unit_price", 0.99], ["LIMIT", 11]]
 => #<ActiveRecord::Relation [#<Track id: nil, name: "Put The Finger On You">, #<Track id: nil, name: "Let's Get It Up">, #<Track id: nil, name: "Inject The Venom">, #<Track id: nil, name: "Snowballed">, #<Track id: nil, name: "Evil Walks">, #<Track id: nil, name: "C.O.D.">, #<Track id: nil, name: "Breaking The Rules">, #<Track id: nil, name: "Night Of The Long Knives">, #<Track id: nil, name: "Spellbound">, #<Track id: nil, name: "Go Down">, ...]>

**---------------**
8. Find the 2 oldest artists.

Artist.order(:created_at).limit(2)
  Artist Load (3.9ms)  SELECT  "artists".* FROM "artists" ORDER BY "artists"."created_at" ASC LIMIT $1  [["LIMIT", 2]]
 => #<ActiveRecord::Relation [#<Artist id: 258, name: "Les Arts Florissants & William Christie", created_at: "2004-02-13 06:08:36", updated_at: "2014-01-29 22:10:22">, #<Artist id: 31, name: "Baby Consuelo", created_at: "2004-02-16 22:04:39", updated_at: "2014-01-29 22:10:22">]>

**---------------**
9, Find the least expensive track that has the genre "Electronica/Dance".

Genre.where(name: "Electronica/Dance")
  Genre Load (0.4ms)  SELECT  "genres".* FROM "genres" WHERE "genres"."name" = $1 LIMIT $2  [["name", "Electronica/Dance"], ["LIMIT", 11]]
 => #<ActiveRecord::Relation [#<Genre id: 15, name: "Electronica/Dance", created_at: "2008-05-25 12:13:42", updated_at: "2014-01-29 22:14:08">]>

Track.where(genre_id: 15).minimum("unit_price")
  (3.4ms)  SELECT MIN("tracks"."unit_price") FROM "tracks" WHERE "tracks"."genre_id" = $1  [["genre_id", 15]]
=> 0.99e0

**---------------**
10. Find all "MPEG audio file" tracks in the genre "Electronica/Dance".

Track.where(genre_id: 15, media_type_id: 1)
  Track Load (1.2ms)  SELECT  "tracks".* FROM "tracks" WHERE "tracks"."genre_id" = $1 AND "tracks"."media_type_id" = $2 LIMIT $3  [["genre_id", 15], ["media_type_id", 1], ["LIMIT", 11]]
 => #<ActiveRecord::Relation [#<Track id: 3319, album_id: 259, genre_id: 15, media_type_id: 1, name: "Instinto Colectivo", composer: nil, milliseconds: 300564, bytes: 12024875, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3320, album_id: 259, genre_id: 15, media_type_id: 1, name: "Chapa o Coco", composer: nil, milliseconds: 143830, bytes: 5755478, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3321, album_id: 259, genre_id: 15, media_type_id: 1, name: "Prostituta", composer: nil, milliseconds: 359000, bytes: 14362307, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3322, album_id: 259, genre_id: 15, media_type_id: 1, name: "Eu So Queria Sumir", composer: nil, milliseconds: 269740, bytes: 10791921, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3323, album_id: 259, genre_id: 15, media_type_id: 1, name: "Tres Reis", composer: nil, milliseconds: 304143, bytes: 12168015, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3324, album_id: 259, genre_id: 15, media_type_id: 1, name: "Um Lugar ao Sol", composer: nil, milliseconds: 212323, bytes: 8495217, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3325, album_id: 259, genre_id: 15, media_type_id: 1, name: "Batalha Naval", composer: nil, milliseconds: 285727, bytes: 11431382, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3327, album_id: 259, genre_id: 15, media_type_id: 1, name: "O Misterio do Samba", composer: nil, milliseconds: 226142, bytes: 9047970, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3328, album_id: 259, genre_id: 15, media_type_id: 1, name: "Armadura", composer: nil, milliseconds: 232881, bytes: 9317533, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, #<Track id: 3329, album_id: 259, genre_id: 15, media_type_id: 1, name: "Na Ladeira", composer: nil, milliseconds: 221570, bytes: 8865099, unit_price: 0.99e0, created_at: "2004-09-27 22:40:29", updated_at: "2014-01-29 22:15:04">, ...]>




STRETCH

1. Find the albums recorded by the artist Queen.

Artist.where("name = ?", "Queen")

  Artist Load (2.0ms)  SELECT  "artists".* FROM "artists" WHERE (name = 'Queen') LIMIT $1  [["LIMIT", 11]]
 => #<ActiveRecord::Relation [#<Artist id: 51, name: "Queen", created_at: "2006-01-08 22:57:01", updated_at: "2014-01-29 22:10:22">]>

Album.where(artist_id: 51)

  Album Load (0.8ms)  SELECT  "albums".* FROM "albums" WHERE "albums"."artist_id" = $1 LIMIT $2  [["artist_id", 51], ["LIMIT", 11]]
 => #<ActiveRecord::Relation [#<Album id: 36, artist_id: 51, title: "Greatest Hits II", created_at: "2008-01-30 14:00:12", updated_at: "2014-01-29 22:14:02">, #<Album id: 185, artist_id: 51, title: "Greatest Hits I", created_at: "2007-12-29 12:02:13", updated_at: "2014-01-29 22:14:02">, #<Album id: 186, artist_id: 51, title: "News Of The World", created_at: "2010-06-23 20:50:06", updated_at: "2014-01-29 22:14:02">]>


2. Count how many tracks belong to the media type "Protected MPEG-4 video file".

MediaType.where(name: "Protected MPEG-4 video file").count

   (1.2ms)  SELECT COUNT(*) FROM "media_types" WHERE "media_types"."name" = $1  [["name", "Protected MPEG-4 video file"]]
 => 1


3. Find the least expensive track that has the genre "Electronica/Dance".

Genre.where(name: "Electronica/Dance")

  Genre Load (0.4ms)  SELECT  "genres".* FROM "genres" WHERE "genres"."name" = $1 LIMIT $2  [["name", "Electronica/Dance"], ["LIMIT", 11]]
 => #<ActiveRecord::Relation [#<Genre id: 15, name: "Electronica/Dance", created_at: "2008-05-25 12:13:42", updated_at: "2014-01-29 22:14:08">]>

Track.where(genre_id: 15).minimum("unit_price")

  (3.4ms)  SELECT MIN("tracks"."unit_price") FROM "tracks" WHERE "tracks"."genre_id" = $1  [["genre_id", 15]]
=> 0.99e0


4. Find the all the artists whose names start with A.

Artist.where("name like ?", "A%")

  Artist Load (6.5ms)  SELECT  "artists".* FROM "artists" WHERE (name like 'A%') LIMIT $1  [["LIMIT", 11]]
 => #<ActiveRecord::Relation [#<Artist id: 3, name: "Aerosmith", created_at: "2010-04-24 12:10:27", updated_at: "2014-01-29 22:10:22">, #<Artist id: 5, name: "Alice In Chains", created_at: "2010-03-17 04:57:44", updated_at: "2014-01-29 22:10:22">, #<Artist id: 6, name: "AntÃ´nio Carlos Jobim", created_at: "2008-02-20 09:42:01", updated_at: "2014-01-29 22:10:22">, #<Artist id: 7, name: "Apocalyptica", created_at: "2007-06-17 17:22:03", updated_at: "2014-01-29 22:10:22">, #<Artist id: 26, name: "Azymuth", created_at: "2011-07-06 01:06:45", updated_at: "2014-01-29 22:10:22">, #<Artist id: 159, name: "Aquaman", created_at: "2010-01-26 04:30:22", updated_at: "2014-01-29 22:10:22">, #<Artist id: 1, name: "AC/DC", created_at: "2013-12-29 10:17:33", updated_at: "2014-01-29 22:10:22">, #<Artist id: 4, name: "Alanis Morissette", created_at: "2006-06-15 08:38:37", updated_at: "2014-01-29 22:10:22">, #<Artist id: 8, name: "Audioslave", created_at: "2005-10-31 17:39:42", updated_at: "2014-01-29 22:10:22">, #<Artist id: 166, name: "Avril Lavigne", created_at: "2011-07-20 07:13:19", updated_at: "2014-01-29 22:10:22">, ...]>


5. Find all the tracks that belong to playlist 1.
